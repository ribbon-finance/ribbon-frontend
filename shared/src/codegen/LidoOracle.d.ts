/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LidoOracleInterface extends ethers.utils.Interface {
  functions: {
    "getCurrentOraclesReportStatus()": FunctionFragment;
    "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)": FunctionFragment;
    "hasInitialized()": FunctionFragment;
    "getVersion()": FunctionFragment;
    "getEVMScriptExecutor(bytes)": FunctionFragment;
    "MANAGE_QUORUM()": FunctionFragment;
    "reportBeacon(uint256,uint64,uint32)": FunctionFragment;
    "getRecoveryVault()": FunctionFragment;
    "getAllowedBeaconBalanceAnnualRelativeIncrease()": FunctionFragment;
    "getAllowedBeaconBalanceRelativeDecrease()": FunctionFragment;
    "getExpectedEpochId()": FunctionFragment;
    "getLastCompletedReportDelta()": FunctionFragment;
    "getLido()": FunctionFragment;
    "SET_BEACON_REPORT_RECEIVER()": FunctionFragment;
    "MANAGE_MEMBERS()": FunctionFragment;
    "getCurrentFrame()": FunctionFragment;
    "allowRecoverability(address)": FunctionFragment;
    "getCurrentReportVariant(uint256)": FunctionFragment;
    "appId()": FunctionFragment;
    "getLastCompletedEpochId()": FunctionFragment;
    "getInitializationBlock()": FunctionFragment;
    "initialize_v2(uint256,uint256)": FunctionFragment;
    "setBeaconReportReceiver(address)": FunctionFragment;
    "transferToVault(address)": FunctionFragment;
    "SET_BEACON_SPEC()": FunctionFragment;
    "canPerform(address,bytes32,uint256[])": FunctionFragment;
    "getCurrentEpochId()": FunctionFragment;
    "getEVMScriptRegistry()": FunctionFragment;
    "addOracleMember(address)": FunctionFragment;
    "getBeaconReportReceiver()": FunctionFragment;
    "SET_REPORT_BOUNDARIES()": FunctionFragment;
    "setQuorum(uint256)": FunctionFragment;
    "getQuorum()": FunctionFragment;
    "kernel()": FunctionFragment;
    "getOracleMembers()": FunctionFragment;
    "isPetrified()": FunctionFragment;
    "setAllowedBeaconBalanceRelativeDecrease(uint256)": FunctionFragment;
    "getBeaconSpec()": FunctionFragment;
    "setBeaconSpec(uint64,uint64,uint64,uint64)": FunctionFragment;
    "MAX_MEMBERS()": FunctionFragment;
    "getCurrentReportVariantsSize()": FunctionFragment;
    "removeOracleMember(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getCurrentOraclesReportStatus",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAllowedBeaconBalanceAnnualRelativeIncrease",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "hasInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getVersion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptExecutor",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "MANAGE_QUORUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "reportBeacon",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllowedBeaconBalanceAnnualRelativeIncrease",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllowedBeaconBalanceRelativeDecrease",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getExpectedEpochId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLastCompletedReportDelta",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getLido", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "SET_BEACON_REPORT_RECEIVER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MANAGE_MEMBERS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentFrame",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "allowRecoverability",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentReportVariant",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "appId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getLastCompletedEpochId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitializationBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize_v2",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBeaconReportReceiver",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferToVault",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "SET_BEACON_SPEC",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "canPerform",
    values: [string, BytesLike, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentEpochId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addOracleMember",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getBeaconReportReceiver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SET_REPORT_BOUNDARIES",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setQuorum",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getQuorum", values?: undefined): string;
  encodeFunctionData(functionFragment: "kernel", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getOracleMembers",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isPetrified",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAllowedBeaconBalanceRelativeDecrease",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBeaconSpec",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setBeaconSpec",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_MEMBERS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentReportVariantsSize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeOracleMember",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getCurrentOraclesReportStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAllowedBeaconBalanceAnnualRelativeIncrease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getVersion", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MANAGE_QUORUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reportBeacon",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllowedBeaconBalanceAnnualRelativeIncrease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllowedBeaconBalanceRelativeDecrease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExpectedEpochId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLastCompletedReportDelta",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getLido", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "SET_BEACON_REPORT_RECEIVER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MANAGE_MEMBERS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentFrame",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowRecoverability",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentReportVariant",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "appId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getLastCompletedEpochId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitializationBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialize_v2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBeaconReportReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SET_BEACON_SPEC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "canPerform", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentEpochId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addOracleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBeaconReportReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SET_REPORT_BOUNDARIES",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setQuorum", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getQuorum", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "kernel", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getOracleMembers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPetrified",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAllowedBeaconBalanceRelativeDecrease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBeaconSpec",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBeaconSpec",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_MEMBERS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentReportVariantsSize",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeOracleMember",
    data: BytesLike
  ): Result;

  events: {
    "ScriptResult(address,bytes,bytes,bytes)": EventFragment;
    "RecoverToVault(address,address,uint256)": EventFragment;
    "AllowedBeaconBalanceAnnualRelativeIncreaseSet(uint256)": EventFragment;
    "AllowedBeaconBalanceRelativeDecreaseSet(uint256)": EventFragment;
    "BeaconReportReceiverSet(address)": EventFragment;
    "MemberAdded(address)": EventFragment;
    "MemberRemoved(address)": EventFragment;
    "QuorumChanged(uint256)": EventFragment;
    "ExpectedEpochIdUpdated(uint256)": EventFragment;
    "BeaconSpecSet(uint64,uint64,uint64,uint64)": EventFragment;
    "BeaconReported(uint256,uint128,uint128,address)": EventFragment;
    "Completed(uint256,uint128,uint128)": EventFragment;
    "PostTotalShares(uint256,uint256,uint256,uint256)": EventFragment;
    "ContractVersionSet(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ScriptResult"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoverToVault"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AllowedBeaconBalanceAnnualRelativeIncreaseSet"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AllowedBeaconBalanceRelativeDecreaseSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BeaconReportReceiverSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QuorumChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpectedEpochIdUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BeaconSpecSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BeaconReported"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Completed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PostTotalShares"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContractVersionSet"): EventFragment;
}

export class LidoOracle extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LidoOracleInterface;

  functions: {
    getCurrentOraclesReportStatus(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getCurrentOraclesReportStatus()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    setAllowedBeaconBalanceAnnualRelativeIncrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    hasInitialized(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    getVersion(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getVersion()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    MANAGE_QUORUM(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "MANAGE_QUORUM()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    reportBeacon(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "reportBeacon(uint256,uint64,uint32)"(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getRecoveryVault(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getAllowedBeaconBalanceAnnualRelativeIncrease(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getAllowedBeaconBalanceAnnualRelativeIncrease()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getAllowedBeaconBalanceRelativeDecrease(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getAllowedBeaconBalanceRelativeDecrease()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getExpectedEpochId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getExpectedEpochId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getLastCompletedReportDelta(overrides?: CallOverrides): Promise<{
      postTotalPooledEther: BigNumber;
      preTotalPooledEther: BigNumber;
      timeElapsed: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getLastCompletedReportDelta()"(overrides?: CallOverrides): Promise<{
      postTotalPooledEther: BigNumber;
      preTotalPooledEther: BigNumber;
      timeElapsed: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    getLido(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getLido()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    SET_BEACON_REPORT_RECEIVER(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "SET_BEACON_REPORT_RECEIVER()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    MANAGE_MEMBERS(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "MANAGE_MEMBERS()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getCurrentFrame(overrides?: CallOverrides): Promise<{
      frameEpochId: BigNumber;
      frameStartTime: BigNumber;
      frameEndTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getCurrentFrame()"(overrides?: CallOverrides): Promise<{
      frameEpochId: BigNumber;
      frameStartTime: BigNumber;
      frameEndTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getCurrentReportVariant(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      beaconBalance: BigNumber;
      beaconValidators: number;
      count: number;
      0: BigNumber;
      1: number;
      2: number;
    }>;

    "getCurrentReportVariant(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      beaconBalance: BigNumber;
      beaconValidators: number;
      count: number;
      0: BigNumber;
      1: number;
      2: number;
    }>;

    appId(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "appId()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getLastCompletedEpochId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getLastCompletedEpochId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getInitializationBlock(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    initialize_v2(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize_v2(uint256,uint256)"(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setBeaconReportReceiver(
      _addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBeaconReportReceiver(address)"(
      _addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    SET_BEACON_SPEC(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "SET_BEACON_SPEC()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getCurrentEpochId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getCurrentEpochId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    addOracleMember(
      _member: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getBeaconReportReceiver(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getBeaconReportReceiver()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    SET_REPORT_BOUNDARIES(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "SET_REPORT_BOUNDARIES()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    setQuorum(
      _quorum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setQuorum(uint256)"(
      _quorum: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getQuorum(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getQuorum()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    kernel(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "kernel()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getOracleMembers(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getOracleMembers()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    isPetrified(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isPetrified()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    setAllowedBeaconBalanceRelativeDecrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAllowedBeaconBalanceRelativeDecrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getBeaconSpec(overrides?: CallOverrides): Promise<{
      epochsPerFrame: BigNumber;
      slotsPerEpoch: BigNumber;
      secondsPerSlot: BigNumber;
      genesisTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    "getBeaconSpec()"(overrides?: CallOverrides): Promise<{
      epochsPerFrame: BigNumber;
      slotsPerEpoch: BigNumber;
      secondsPerSlot: BigNumber;
      genesisTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    setBeaconSpec(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBeaconSpec(uint64,uint64,uint64,uint64)"(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    MAX_MEMBERS(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "MAX_MEMBERS()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getCurrentReportVariantsSize(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getCurrentReportVariantsSize()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    removeOracleMember(
      _member: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getCurrentOraclesReportStatus(overrides?: CallOverrides): Promise<BigNumber>;

  "getCurrentOraclesReportStatus()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setAllowedBeaconBalanceAnnualRelativeIncrease(
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)"(
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  hasInitialized(overrides?: CallOverrides): Promise<boolean>;

  "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  getVersion(overrides?: CallOverrides): Promise<BigNumber>;

  "getVersion()"(overrides?: CallOverrides): Promise<BigNumber>;

  getEVMScriptExecutor(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getEVMScriptExecutor(bytes)"(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  MANAGE_QUORUM(overrides?: CallOverrides): Promise<string>;

  "MANAGE_QUORUM()"(overrides?: CallOverrides): Promise<string>;

  reportBeacon(
    _epochId: BigNumberish,
    _beaconBalance: BigNumberish,
    _beaconValidators: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "reportBeacon(uint256,uint64,uint32)"(
    _epochId: BigNumberish,
    _beaconBalance: BigNumberish,
    _beaconValidators: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getRecoveryVault(overrides?: CallOverrides): Promise<string>;

  "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

  getAllowedBeaconBalanceAnnualRelativeIncrease(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAllowedBeaconBalanceAnnualRelativeIncrease()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAllowedBeaconBalanceRelativeDecrease(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAllowedBeaconBalanceRelativeDecrease()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getExpectedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

  "getExpectedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getLastCompletedReportDelta(overrides?: CallOverrides): Promise<{
    postTotalPooledEther: BigNumber;
    preTotalPooledEther: BigNumber;
    timeElapsed: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "getLastCompletedReportDelta()"(overrides?: CallOverrides): Promise<{
    postTotalPooledEther: BigNumber;
    preTotalPooledEther: BigNumber;
    timeElapsed: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  getLido(overrides?: CallOverrides): Promise<string>;

  "getLido()"(overrides?: CallOverrides): Promise<string>;

  SET_BEACON_REPORT_RECEIVER(overrides?: CallOverrides): Promise<string>;

  "SET_BEACON_REPORT_RECEIVER()"(overrides?: CallOverrides): Promise<string>;

  MANAGE_MEMBERS(overrides?: CallOverrides): Promise<string>;

  "MANAGE_MEMBERS()"(overrides?: CallOverrides): Promise<string>;

  getCurrentFrame(overrides?: CallOverrides): Promise<{
    frameEpochId: BigNumber;
    frameStartTime: BigNumber;
    frameEndTime: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "getCurrentFrame()"(overrides?: CallOverrides): Promise<{
    frameEpochId: BigNumber;
    frameStartTime: BigNumber;
    frameEndTime: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  allowRecoverability(
    token: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "allowRecoverability(address)"(
    token: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getCurrentReportVariant(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    beaconBalance: BigNumber;
    beaconValidators: number;
    count: number;
    0: BigNumber;
    1: number;
    2: number;
  }>;

  "getCurrentReportVariant(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    beaconBalance: BigNumber;
    beaconValidators: number;
    count: number;
    0: BigNumber;
    1: number;
    2: number;
  }>;

  appId(overrides?: CallOverrides): Promise<string>;

  "appId()"(overrides?: CallOverrides): Promise<string>;

  getLastCompletedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

  "getLastCompletedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  initialize_v2(
    _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
    _allowedBeaconBalanceRelativeDecrease: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize_v2(uint256,uint256)"(
    _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
    _allowedBeaconBalanceRelativeDecrease: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setBeaconReportReceiver(
    _addr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBeaconReportReceiver(address)"(
    _addr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferToVault(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferToVault(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  SET_BEACON_SPEC(overrides?: CallOverrides): Promise<string>;

  "SET_BEACON_SPEC()"(overrides?: CallOverrides): Promise<string>;

  canPerform(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canPerform(address,bytes32,uint256[])"(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  getCurrentEpochId(overrides?: CallOverrides): Promise<BigNumber>;

  "getCurrentEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

  "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

  addOracleMember(
    _member: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addOracleMember(address)"(
    _member: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getBeaconReportReceiver(overrides?: CallOverrides): Promise<string>;

  "getBeaconReportReceiver()"(overrides?: CallOverrides): Promise<string>;

  SET_REPORT_BOUNDARIES(overrides?: CallOverrides): Promise<string>;

  "SET_REPORT_BOUNDARIES()"(overrides?: CallOverrides): Promise<string>;

  setQuorum(
    _quorum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setQuorum(uint256)"(
    _quorum: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getQuorum(overrides?: CallOverrides): Promise<BigNumber>;

  "getQuorum()"(overrides?: CallOverrides): Promise<BigNumber>;

  kernel(overrides?: CallOverrides): Promise<string>;

  "kernel()"(overrides?: CallOverrides): Promise<string>;

  getOracleMembers(overrides?: CallOverrides): Promise<string[]>;

  "getOracleMembers()"(overrides?: CallOverrides): Promise<string[]>;

  isPetrified(overrides?: CallOverrides): Promise<boolean>;

  "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

  setAllowedBeaconBalanceRelativeDecrease(
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAllowedBeaconBalanceRelativeDecrease(uint256)"(
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getBeaconSpec(overrides?: CallOverrides): Promise<{
    epochsPerFrame: BigNumber;
    slotsPerEpoch: BigNumber;
    secondsPerSlot: BigNumber;
    genesisTime: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
  }>;

  "getBeaconSpec()"(overrides?: CallOverrides): Promise<{
    epochsPerFrame: BigNumber;
    slotsPerEpoch: BigNumber;
    secondsPerSlot: BigNumber;
    genesisTime: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
  }>;

  setBeaconSpec(
    _epochsPerFrame: BigNumberish,
    _slotsPerEpoch: BigNumberish,
    _secondsPerSlot: BigNumberish,
    _genesisTime: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBeaconSpec(uint64,uint64,uint64,uint64)"(
    _epochsPerFrame: BigNumberish,
    _slotsPerEpoch: BigNumberish,
    _secondsPerSlot: BigNumberish,
    _genesisTime: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  MAX_MEMBERS(overrides?: CallOverrides): Promise<BigNumber>;

  "MAX_MEMBERS()"(overrides?: CallOverrides): Promise<BigNumber>;

  getCurrentReportVariantsSize(overrides?: CallOverrides): Promise<BigNumber>;

  "getCurrentReportVariantsSize()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  removeOracleMember(
    _member: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeOracleMember(address)"(
    _member: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getCurrentOraclesReportStatus(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentOraclesReportStatus()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAllowedBeaconBalanceAnnualRelativeIncrease(
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)"(
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    hasInitialized(overrides?: CallOverrides): Promise<boolean>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    getVersion(overrides?: CallOverrides): Promise<BigNumber>;

    "getVersion()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    MANAGE_QUORUM(overrides?: CallOverrides): Promise<string>;

    "MANAGE_QUORUM()"(overrides?: CallOverrides): Promise<string>;

    reportBeacon(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "reportBeacon(uint256,uint64,uint32)"(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getRecoveryVault(overrides?: CallOverrides): Promise<string>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

    getAllowedBeaconBalanceAnnualRelativeIncrease(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAllowedBeaconBalanceAnnualRelativeIncrease()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAllowedBeaconBalanceRelativeDecrease(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAllowedBeaconBalanceRelativeDecrease()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExpectedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getExpectedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastCompletedReportDelta(overrides?: CallOverrides): Promise<{
      postTotalPooledEther: BigNumber;
      preTotalPooledEther: BigNumber;
      timeElapsed: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getLastCompletedReportDelta()"(overrides?: CallOverrides): Promise<{
      postTotalPooledEther: BigNumber;
      preTotalPooledEther: BigNumber;
      timeElapsed: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    getLido(overrides?: CallOverrides): Promise<string>;

    "getLido()"(overrides?: CallOverrides): Promise<string>;

    SET_BEACON_REPORT_RECEIVER(overrides?: CallOverrides): Promise<string>;

    "SET_BEACON_REPORT_RECEIVER()"(overrides?: CallOverrides): Promise<string>;

    MANAGE_MEMBERS(overrides?: CallOverrides): Promise<string>;

    "MANAGE_MEMBERS()"(overrides?: CallOverrides): Promise<string>;

    getCurrentFrame(overrides?: CallOverrides): Promise<{
      frameEpochId: BigNumber;
      frameStartTime: BigNumber;
      frameEndTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getCurrentFrame()"(overrides?: CallOverrides): Promise<{
      frameEpochId: BigNumber;
      frameStartTime: BigNumber;
      frameEndTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getCurrentReportVariant(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      beaconBalance: BigNumber;
      beaconValidators: number;
      count: number;
      0: BigNumber;
      1: number;
      2: number;
    }>;

    "getCurrentReportVariant(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      beaconBalance: BigNumber;
      beaconValidators: number;
      count: number;
      0: BigNumber;
      1: number;
      2: number;
    }>;

    appId(overrides?: CallOverrides): Promise<string>;

    "appId()"(overrides?: CallOverrides): Promise<string>;

    getLastCompletedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastCompletedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize_v2(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize_v2(uint256,uint256)"(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBeaconReportReceiver(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBeaconReportReceiver(address)"(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferToVault(_token: string, overrides?: CallOverrides): Promise<void>;

    "transferToVault(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    SET_BEACON_SPEC(overrides?: CallOverrides): Promise<string>;

    "SET_BEACON_SPEC()"(overrides?: CallOverrides): Promise<string>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    getCurrentEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

    addOracleMember(_member: string, overrides?: CallOverrides): Promise<void>;

    "addOracleMember(address)"(
      _member: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getBeaconReportReceiver(overrides?: CallOverrides): Promise<string>;

    "getBeaconReportReceiver()"(overrides?: CallOverrides): Promise<string>;

    SET_REPORT_BOUNDARIES(overrides?: CallOverrides): Promise<string>;

    "SET_REPORT_BOUNDARIES()"(overrides?: CallOverrides): Promise<string>;

    setQuorum(_quorum: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "setQuorum(uint256)"(
      _quorum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getQuorum(overrides?: CallOverrides): Promise<BigNumber>;

    "getQuorum()"(overrides?: CallOverrides): Promise<BigNumber>;

    kernel(overrides?: CallOverrides): Promise<string>;

    "kernel()"(overrides?: CallOverrides): Promise<string>;

    getOracleMembers(overrides?: CallOverrides): Promise<string[]>;

    "getOracleMembers()"(overrides?: CallOverrides): Promise<string[]>;

    isPetrified(overrides?: CallOverrides): Promise<boolean>;

    "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

    setAllowedBeaconBalanceRelativeDecrease(
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAllowedBeaconBalanceRelativeDecrease(uint256)"(
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getBeaconSpec(overrides?: CallOverrides): Promise<{
      epochsPerFrame: BigNumber;
      slotsPerEpoch: BigNumber;
      secondsPerSlot: BigNumber;
      genesisTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    "getBeaconSpec()"(overrides?: CallOverrides): Promise<{
      epochsPerFrame: BigNumber;
      slotsPerEpoch: BigNumber;
      secondsPerSlot: BigNumber;
      genesisTime: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    setBeaconSpec(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBeaconSpec(uint64,uint64,uint64,uint64)"(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    MAX_MEMBERS(overrides?: CallOverrides): Promise<BigNumber>;

    "MAX_MEMBERS()"(overrides?: CallOverrides): Promise<BigNumber>;

    getCurrentReportVariantsSize(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentReportVariantsSize()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeOracleMember(
      _member: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeOracleMember(address)"(
      _member: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ScriptResult(
      executor: string | null,
      script: null,
      input: null,
      returnData: null
    ): EventFilter;

    RecoverToVault(
      vault: string | null,
      token: string | null,
      amount: null
    ): EventFilter;

    AllowedBeaconBalanceAnnualRelativeIncreaseSet(value: null): EventFilter;

    AllowedBeaconBalanceRelativeDecreaseSet(value: null): EventFilter;

    BeaconReportReceiverSet(callback: null): EventFilter;

    MemberAdded(member: null): EventFilter;

    MemberRemoved(member: null): EventFilter;

    QuorumChanged(quorum: null): EventFilter;

    ExpectedEpochIdUpdated(epochId: null): EventFilter;

    BeaconSpecSet(
      epochsPerFrame: null,
      slotsPerEpoch: null,
      secondsPerSlot: null,
      genesisTime: null
    ): EventFilter;

    BeaconReported(
      epochId: null,
      beaconBalance: null,
      beaconValidators: null,
      caller: null
    ): EventFilter;

    Completed(
      epochId: null,
      beaconBalance: null,
      beaconValidators: null
    ): EventFilter;

    PostTotalShares(
      postTotalPooledEther: null,
      preTotalPooledEther: null,
      timeElapsed: null,
      totalShares: null
    ): EventFilter;

    ContractVersionSet(version: null): EventFilter;
  };

  estimateGas: {
    getCurrentOraclesReportStatus(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentOraclesReportStatus()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAllowedBeaconBalanceAnnualRelativeIncrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    hasInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    getVersion(overrides?: CallOverrides): Promise<BigNumber>;

    "getVersion()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MANAGE_QUORUM(overrides?: CallOverrides): Promise<BigNumber>;

    "MANAGE_QUORUM()"(overrides?: CallOverrides): Promise<BigNumber>;

    reportBeacon(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "reportBeacon(uint256,uint64,uint32)"(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getRecoveryVault(overrides?: CallOverrides): Promise<BigNumber>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAllowedBeaconBalanceAnnualRelativeIncrease(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAllowedBeaconBalanceAnnualRelativeIncrease()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAllowedBeaconBalanceRelativeDecrease(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAllowedBeaconBalanceRelativeDecrease()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExpectedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getExpectedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastCompletedReportDelta(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastCompletedReportDelta()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLido(overrides?: CallOverrides): Promise<BigNumber>;

    "getLido()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_BEACON_REPORT_RECEIVER(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_BEACON_REPORT_RECEIVER()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MANAGE_MEMBERS(overrides?: CallOverrides): Promise<BigNumber>;

    "MANAGE_MEMBERS()"(overrides?: CallOverrides): Promise<BigNumber>;

    getCurrentFrame(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentFrame()"(overrides?: CallOverrides): Promise<BigNumber>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentReportVariant(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentReportVariant(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    appId(overrides?: CallOverrides): Promise<BigNumber>;

    "appId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLastCompletedEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getLastCompletedEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize_v2(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize_v2(uint256,uint256)"(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setBeaconReportReceiver(
      _addr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBeaconReportReceiver(address)"(
      _addr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferToVault(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    SET_BEACON_SPEC(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_BEACON_SPEC()"(overrides?: CallOverrides): Promise<BigNumber>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentEpochId(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentEpochId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<BigNumber>;

    addOracleMember(_member: string, overrides?: Overrides): Promise<BigNumber>;

    "addOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getBeaconReportReceiver(overrides?: CallOverrides): Promise<BigNumber>;

    "getBeaconReportReceiver()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_REPORT_BOUNDARIES(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_REPORT_BOUNDARIES()"(overrides?: CallOverrides): Promise<BigNumber>;

    setQuorum(_quorum: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "setQuorum(uint256)"(
      _quorum: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getQuorum(overrides?: CallOverrides): Promise<BigNumber>;

    "getQuorum()"(overrides?: CallOverrides): Promise<BigNumber>;

    kernel(overrides?: CallOverrides): Promise<BigNumber>;

    "kernel()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOracleMembers(overrides?: CallOverrides): Promise<BigNumber>;

    "getOracleMembers()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPetrified(overrides?: CallOverrides): Promise<BigNumber>;

    "isPetrified()"(overrides?: CallOverrides): Promise<BigNumber>;

    setAllowedBeaconBalanceRelativeDecrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAllowedBeaconBalanceRelativeDecrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getBeaconSpec(overrides?: CallOverrides): Promise<BigNumber>;

    "getBeaconSpec()"(overrides?: CallOverrides): Promise<BigNumber>;

    setBeaconSpec(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBeaconSpec(uint64,uint64,uint64,uint64)"(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    MAX_MEMBERS(overrides?: CallOverrides): Promise<BigNumber>;

    "MAX_MEMBERS()"(overrides?: CallOverrides): Promise<BigNumber>;

    getCurrentReportVariantsSize(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentReportVariantsSize()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeOracleMember(
      _member: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getCurrentOraclesReportStatus(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentOraclesReportStatus()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAllowedBeaconBalanceAnnualRelativeIncrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAllowedBeaconBalanceAnnualRelativeIncrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    hasInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "hasInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getVersion()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MANAGE_QUORUM(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MANAGE_QUORUM()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    reportBeacon(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "reportBeacon(uint256,uint64,uint32)"(
      _epochId: BigNumberish,
      _beaconBalance: BigNumberish,
      _beaconValidators: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getRecoveryVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getRecoveryVault()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAllowedBeaconBalanceAnnualRelativeIncrease(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAllowedBeaconBalanceAnnualRelativeIncrease()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAllowedBeaconBalanceRelativeDecrease(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAllowedBeaconBalanceRelativeDecrease()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExpectedEpochId(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getExpectedEpochId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLastCompletedReportDelta(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLastCompletedReportDelta()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLido(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLido()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SET_BEACON_REPORT_RECEIVER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "SET_BEACON_REPORT_RECEIVER()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MANAGE_MEMBERS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MANAGE_MEMBERS()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentFrame(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCurrentFrame()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentReportVariant(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentReportVariant(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    appId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "appId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getLastCompletedEpochId(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLastCompletedEpochId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInitializationBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getInitializationBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize_v2(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize_v2(uint256,uint256)"(
      _allowedBeaconBalanceAnnualRelativeIncrease: BigNumberish,
      _allowedBeaconBalanceRelativeDecrease: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setBeaconReportReceiver(
      _addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBeaconReportReceiver(address)"(
      _addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    SET_BEACON_SPEC(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "SET_BEACON_SPEC()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentEpochId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCurrentEpochId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEVMScriptRegistry(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptRegistry()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addOracleMember(
      _member: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getBeaconReportReceiver(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBeaconReportReceiver()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SET_REPORT_BOUNDARIES(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "SET_REPORT_BOUNDARIES()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setQuorum(
      _quorum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setQuorum(uint256)"(
      _quorum: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getQuorum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getQuorum()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    kernel(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "kernel()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOracleMembers(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOracleMembers()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPetrified(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isPetrified()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setAllowedBeaconBalanceRelativeDecrease(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAllowedBeaconBalanceRelativeDecrease(uint256)"(
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getBeaconSpec(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getBeaconSpec()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setBeaconSpec(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBeaconSpec(uint64,uint64,uint64,uint64)"(
      _epochsPerFrame: BigNumberish,
      _slotsPerEpoch: BigNumberish,
      _secondsPerSlot: BigNumberish,
      _genesisTime: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    MAX_MEMBERS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MAX_MEMBERS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getCurrentReportVariantsSize(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentReportVariantsSize()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeOracleMember(
      _member: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeOracleMember(address)"(
      _member: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
